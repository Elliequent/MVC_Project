@model Local_Theatre_Company_V1._0.Models.ViewModels.EditUserViewModel

<link rel="stylesheet" type="text/css" href="~/Content/Profile.css">

<div class="container">
    <div class="main-body">

        @if (User.IsInRole("Suspended"))
        {

            <br />
            <div style="color: red; text-align: center; font-size: 30px;"> This Account has been suspended to violating LTC Blog Rules </div>
            <br />
            <h5 style="color: red; text-align: center;"> Please contact LTC to resolve the issue </h5>
            <br />
            <br />

        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row gutters-sm">
            <div class="col-md-4 mb-3">
                <div class="card">
                    <div class="card-body" style="height: 100%">
                        <div class="d-flex flex-column align-items-center text-center">
                            <img src="~/Images/profile.png" class="img-circle" alt="Profile Picture" />
                            <div class="mt-3">
                                <h4>@Model.FirstName @Model.LastName</h4>
                                <p class="text-secondary mb-1">Joined: @Model.RegisteredAt.ToShortDateString()</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="card mb-3">
                    <div class="card-body">

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="row">
                                <div class="col-sm-3">
                                    <h6 class="mb-0">First Name</h6>
                                </div>
                                <div class="col-sm-9 text-secondary">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <hr>

                            <div class="row">
                                <div class="col-sm-3">
                                    <h6 class="mb-0">Second Name</h6>
                                </div>
                                <div class="col-sm-9 text-secondary">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <hr>

                            <div class="row">
                                <div class="col-sm-3">
                                    <h6 class="mb-0">Address Line 1</h6>
                                </div>
                                <div class="col-sm-9 text-secondary">
                                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <hr>

                            <div class="row">
                                <div class="col-sm-3">
                                    <h6 class="mb-0">Address Line 2</h6>
                                </div>
                                <div class="col-sm-9 text-secondary">
                                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <hr>

                            <div class="row">
                                <div class="col-sm-3">
                                    <h6 class="mb-0">City</h6>
                                </div>
                                <div class="col-sm-9 text-secondary">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <hr>

                            <div class="row">
                                <div class="col-sm-3">
                                    <h6 class="mb-0">Postcode</h6>
                                </div>
                                <div class="col-sm-9 text-secondary">
                                    @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <hr>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save Changes" class="btn btn-primary" />
                                </div>
                            </div>

                        }

                    </div>
                </div>
            </div>

            @if (User.IsInRole("Customer"))
            {

                <div class="row gutters-sm">
                    <div class="col-sm-12 mb-3">
                        <div class="card h-100">
                            <div class="card-body">
                                <h3 class="d-flex align-items-center mb-3" style="text-align: center"><strong>Your Comments</strong> </h3>
                                <div class="">

                                    @foreach (var item in ViewBag.Comments)
                                    {

                                        <div class="card">
                                            <h2 style="text-align: center">@item.Customer.FirstName @item.Customer.LastName</h2>
                                            <h5 style="text-align: center">@item.PostedOn.ToShortDateString()</h5>
                                            <p>@item.Body</p>
                                            @if (User.Identity.Name == item.Customer.UserName)
                                            {

                                                @Html.ActionLink("Edit your comment", "EditComment", "Comment", new { id = item.CommentID }, new { @class = "btn btn-success" })

                                            }
                                        </div>

                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }

        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to Home", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
